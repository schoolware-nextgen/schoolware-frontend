name: Build image
on:
  push:
    tags-ignore: android
jobs:
  build-image:
    runs-on: ubuntu-latest
    container:
      image: catthehacker/ubuntu:act-latest
    env:
      DOCKER_USERNAME: gitea
      RUNNER_TOOL_CACHE: /toolcache # Runner Tool Cache
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2
      
      - uses: actions/setup-node@v4
        with:
          node-version: 21
          cache: 'npm'
      
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-     

      - if: steps.npm-cache.outputs.cache-hit != 'true'
        name: Install dependencies if no cache
        run: npm ci

      - if: steps.npm-cache.outputs.cache-hit == 'true'
        name: Install dependencies if no cache
        run: npm i

      - name: export
        run: |
          npx expo export --platform web
      
      - name: Login to gitea Container Registry
        uses: docker/login-action@v3
        with:
          registry: git.mb-server.com
          username: mb
          password: ${{ secrets.DOCKER_TOKEN_MORE  }}
        
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: |
            linux/amd64                                                
          push: true
          tags: git.mb-server.com/schoolware-nextgen/schoolware-frontend:latest